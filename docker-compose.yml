services:

  # Nginx
  nginx-service:
    image: nginx:latest
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 80:80
    depends_on:
      - auth-service
      - product-service
      - order-service
      - admin-service
      - user-service

  auth-service:
    working_dir: /app
    build:
      context: ./auth_service
      dockerfile: Dockerfile
    container_name: auth_service
    restart: always
    env_file:
      - .env
    depends_on:
      - mongodb-service
      - postgres-service
    # expose:
    #   - 80
    # command: ["fastapi", "run", "./src/main.py", "--proxy-headers", "--port", "80"]

  product-service:
    working_dir: /app
    build:
      context: ./product_service
      dockerfile: Dockerfile
    container_name: product_service
    restart: always
    env_file:
      - .env
    depends_on:
      - mongodb-service
      - postgres-service
    # expose:
    #   - 80
    # command: ["fastapi", "run", "./src/main.py", "--proxy-headers", "--port", "80"]

  order-service:
    working_dir: /app
    build:
      context: ./order_service
      dockerfile: Dockerfile
    container_name: order_service
    restart: always
    env_file:
      - .env
    depends_on:
      - mongodb-service
      - postgres-service
    # expose:
    #   - 80
    # command: ["fastapi", "run", "./src/main.py", "--proxy-headers", "--port", "80"]

  admin-service:
    working_dir: /app
    build:
      context: ./admin_service
      dockerfile: Dockerfile
    container_name: admin_service
    restart: always
    env_file:
      - .env
    depends_on:
      - mongodb-service
      - postgres-service
    # expose:
    #   - 80
    # command: ["fastapi", "run", "./src/main.py", "--proxy-headers", "--port", "80"]

  user-service:
    working_dir: /app
    build:
      context: ./user_service
      dockerfile: Dockerfile
    container_name: user_service
    restart: always
    env_file:
      - .env
    depends_on:
      - mongodb-service
      - postgres-service
    # expose:
    #   - 80
    # command: ["fastapi", "run", "./src/main.py", "--proxy-headers", "--port", "80"]

  # Mongo-db
  mongodb-service:
    image: mongo
    container_name: mongo-db
    restart: always
    volumes:
      - mongo_data:/data/db
    env_file:
      - .env
    ports:
      - 27017:27017

  # Postgresql
  postgres-service:
    image: postgres
    container_name: postgres-db
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - 54032:5432

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - 8080:80
    env_file:
      - .env
    depends_on:
      - postgres-service

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - 9090:9090
    depends_on:
      - auth-service
      - product-service
      - order-service
      - admin-service
      - user-service

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    volumes:
      - grafana_data:/var/lib/grafana 
    env_file:
      - .env
    ports:
      - 3000:3000

volumes:
  pgdata:
  mongo_data:
  prometheus_data:
  grafana_data:
