services:

  # Nginx
  nginx:
    image: nginx:latest
    restart: always
    depends_on:
      - auth-service1
      - auth-service2
      - todo-list-service1
      - todo-list-service2
    ports:
      - ${EXTERNAL_FASTAPI_PORT}:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

  # Auth service -> 2 node
  auth-service1:
    working_dir: /app
    build:
      context: ./auth_service
      dockerfile: Dockerfile
    container_name: auth_service1
    restart: always
    env_file:
      - .env
    depends_on:
      - mongo-db
      - postgres-db
    expose:
      - ${INTERNAL_FASTAPI_PORT}
    command: ["fastapi", "run", "./src/main.py", "--port", "${INTERNAL_FASTAPI_PORT}"]

  auth-service2:
    working_dir: /app
    build:
      context: ./auth_service
      dockerfile: Dockerfile
    container_name: auth_service2
    restart: always
    env_file:
      - .env
    depends_on:
      - mongo-db
      - postgres-db
    expose:
      - ${INTERNAL_FASTAPI_PORT}
    command: ["fastapi", "run", "./src/main.py", "--port", "${INTERNAL_FASTAPI_PORT}"]

  # Todo-list service -> 2 node
  todo-list-service1:
    working_dir: /app
    build:
      context: ./todo_list_service
      dockerfile: Dockerfile
    container_name: todo_list_service1
    restart: always
    env_file:
      - .env
    depends_on:
      - mongo-db
      - postgres-db
    expose:
      - ${INTERNAL_FASTAPI_PORT}
    command: ["fastapi", "run", "./src/main.py", "--port", "${INTERNAL_FASTAPI_PORT}"]

  todo-list-service2:
    working_dir: /app
    build:
      context: ./todo_list_service
      dockerfile: Dockerfile
    container_name: todo_list_service2
    restart: always
    env_file:
      - .env
    depends_on:
      - mongo-db
      - postgres-db
    expose:
      - ${INTERNAL_FASTAPI_PORT}
    command: ["fastapi", "run", "./src/main.py", "--port", "${INTERNAL_FASTAPI_PORT}"]

  # Mongo-db
  mongo-db:
    image: mongo
    container_name: mongo-db
    restart: always
    expose:
      - 27017
    ports:
      - 27017:27017
    env_file:
      - .env
    volumes:
      - mongo_data:/data/db

  # Postgresql
  postgres-db:
    image: postgres
    container_name: postgres-db
    restart: always
    expose:
      - 5432
    ports:
      - 54032:5432
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - 8080:80
    env_file:
      - .env
    depends_on:
      - postgres-db

volumes:
  pgdata:
  mongo_data:
