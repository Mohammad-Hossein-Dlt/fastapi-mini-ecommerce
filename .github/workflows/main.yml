name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      EXTERNAL_FASTAPI_PORT: ${{ vars.EXTERNAL_FASTAPI_PORT }}
      INTERNAL_FASTAPI_PORT: ${{ vars.INTERNAL_FASTAPI_PORT }}
      AUTH_BASE_URL: ${{ vars.AUTH_BASE_URL }}
      PRODUCT_BASE_URL: ${{ vars.PRODUCT_BASE_URL }}
      ORDER_BASE_URL: ${{ vars.ORDER_BASE_URL }}
      AUTH_DB_STACK: ${{ vars.AUTH_DB_STACK }}
      PRODUCT_DB_STACK: ${{ vars.PRODUCT_DB_STACK }}
      ORDER_DB_STACK: ${{ vars.ORDER_DB_STACK }}
      MONGO_HOST: ${{ vars.MONGO_HOST }}
      MONGO_PORT: ${{ vars.MONGO_PORT }}
      MONGO_INITDB_ROOT_USERNAME: ${{ vars.MONGO_INITDB_ROOT_USERNAME }}
      MONGO_INITDB_ROOT_PASSWORD: ${{ vars.MONGO_INITDB_ROOT_PASSWORD }}
      MONGO_INITDB_DATABASE: ${{ vars.MONGO_INITDB_DATABASE }}
      POSTGRES_HOST: ${{ vars.POSTGRES_HOST }}
      POSTGRES_PORT: ${{ vars.POSTGRES_PORT }}
      POSTGRES_USER: ${{ vars.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ vars.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ vars.POSTGRES_DB }}
      PGADMIN_DEFAULT_EMAIL: ${{ vars.PGADMIN_DEFAULT_EMAIL }}
      PGADMIN_DEFAULT_PASSWORD: ${{ vars.PGADMIN_DEFAULT_PASSWORD }}
      JWT_SECRET: ${{ vars.JWT_SECRET }}
      JWT_ALGORITHM: ${{ vars.JWT_ALGORITHM }}
      JWT_EXPIRATION_MINUTES: ${{ vars.JWT_EXPIRATION_MINUTES }}
      JWT_REFRESH_EXPIRATION_MINUTES: ${{ vars.JWT_REFRESH_EXPIRATION_MINUTES }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push auth
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/auth:latest ./auth_service
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/auth:latest

      - name: Build and Push product
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/product:latest ./product_service
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/product:latest

      - name: Build and Push order
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/order:latest ./order_service
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/order:latest

      - name: Build and Push admin
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/admin:latest ./admin_service
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/admin:latest

      - name: Build and Push user
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/user:latest ./user_service
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/user:latest

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > $HOME/.kube/config

      # - name: Apply ConfigMap from .env
      #   run: |
      #     kubectl create configmap app-config --from-env-file=.env -o yaml --dry-run=client | kubectl apply -f -
      - name: Create ConfigMap from Variables
        run: |
          kubectl create configmap app-config \
            --from-literal=EXTERNAL_FASTAPI_PORT=$EXTERNAL_FASTAPI_PORT \
            --from-literal=INTERNAL_FASTAPI_PORT=$INTERNAL_FASTAPI_PORT \
            --from-literal=AUTH_BASE_URL=$AUTH_BASE_URL \
            --from-literal=PRODUCT_BASE_URL=$PRODUCT_BASE_URL \
            --from-literal=ORDER_BASE_URL=$ORDER_BASE_URL \
            --from-literal=AUTH_DB_STACK=$AUTH_DB_STACK \
            --from-literal=PRODUCT_DB_STACK=$PRODUCT_DB_STACK \
            --from-literal=ORDER_DB_STACK=$ORDER_DB_STACK \
            --from-literal=MONGO_HOST=$MONGO_HOST \
            --from-literal=MONGO_PORT=$MONGO_PORT \
            --from-literal=MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME \
            --from-literal=MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD \
            --from-literal=MONGO_INITDB_DATABASE=$MONGO_INITDB_DATABASE \
            --from-literal=POSTGRES_HOST=$POSTGRES_HOST \
            --from-literal=POSTGRES_PORT=$POSTGRES_PORT \
            --from-literal=POSTGRES_USER=$POSTGRES_USER \
            --from-literal=POSTGRES_PASSWORD=$POSTGRES_PASSWORD \
            --from-literal=POSTGRES_DB=$POSTGRES_DB \
            --from-literal=PGADMIN_DEFAULT_EMAIL=$PGADMIN_DEFAULT_EMAIL \
            --from-literal=PGADMIN_DEFAULT_PASSWORD=$PGADMIN_DEFAULT_PASSWORD \
            --from-literal=JWT_SECRET=$JWT_SECRET \
            --from-literal=JWT_ALGORITHM=$JWT_ALGORITHM \
            --from-literal=JWT_EXPIRATION_MINUTES=$JWT_EXPIRATION_MINUTES \
            --from-literal=JWT_REFRESH_EXPIRATION_MINUTES=$JWT_REFRESH_EXPIRATION_MINUTES \
            -o yaml --dry-run=client | kubectl apply -f -

      - name: Apply nginx ConfigMap from file
        run: |
          kubectl create configmap nginx-config --from-file=nginx.conf -o yaml --dry-run=client | kubectl apply -f -

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/

      - name: Restart nginx to pick up new config
        run: |
          kubectl rollout restart deployment/nginx-deployment
