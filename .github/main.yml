name: CI/CD with Docker Compose

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - uses: actions/checkout@v3

      # 2. Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Create .env file
        run: |
          cat <<EOF > .env
          EXTERNAL_FASTAPI_PORT = ${{ vars.EXTERNAL_FASTAPI_PORT }}
          INTERNAL_FASTAPI_PORT = ${{ vars.INTERNAL_FASTAPI_PORT }}

          # Base URLs
          AUTH_BASE_URL = ${{ vars.AUTH_BASE_URL }}
          PRODUCT_BASE_URL = ${{ vars.PRODUCT_BASE_URL }}
          ORDER_BASE_URL = ${{ vars.ORDER_BASE_URL }}

          # DB Stack
          AUTH_DB_STACK = ${{ vars.AUTH_DB_STACK }}
          PRODUCT_DB_STACK = ${{ vars.PRODUCT_DB_STACK }}
          ORDER_DB_STACK = ${{ vars.ORDER_DB_STACK }}

          # MongoDB
          MONGO_HOST = ${{ vars.MONGO_HOST }}
          MONGO_PORT = ${{ vars.MONGO_PORT }}
          MONGO_INITDB_ROOT_USERNAME = ${{ vars.MONGO_INITDB_ROOT_USERNAME }}
          MONGO_INITDB_ROOT_PASSWORD = ${{ vars.MONGO_INITDB_ROOT_PASSWORD }}
          MONGO_INITDB_DATABASE = ${{ vars.MONGO_INITDB_DATABASE }}

          # PostgreSQL
          POSTGRES_HOST = ${{ vars.POSTGRES_HOST }}
          POSTGRES_PORT = ${{ vars.POSTGRES_PORT }}
          POSTGRES_USER = ${{ vars.POSTGRES_USER }}
          POSTGRES_PASSWORD = ${{ vars.POSTGRES_PASSWORD }}
          POSTGRES_DB = ${{ vars.POSTGRES_DB }}

          # JWT
          JWT_SECRET = ${{ vars.JWT_SECRET }}
          JWT_ALGORITHM = ${{ vars.JWT_ALGORITHM }}
          JWT_EXPIRATION_MINUTES = ${{ vars.JWT_EXPIRATION_MINUTES }}
          JWT_REFRESH_EXPIRATION_MINUTES = ${{ vars.JWT_REFRESH_EXPIRATION_MINUTES }}
          EOF

      # 3. Build & start services with Docker Compose
      - name: Build and start containers
        run: |
          docker compose up -d

      # 4. Check running containers
      - name: Check Docker containers
        run: docker ps -a

      # 5. Wait for services to be ready
      - name: Wait for services
        run: sleep 20

      # 6. Test API endpoints via Nginx
      - name: Test auth-service
        run: |
          curl -v http://localhost/auth/api/v1/health

      - name: Test product-service
        run: |
          curl -v http://localhost/product/api/v1/health

      - name: Test order-service
        run: |
          curl -v http://localhost/order/api/v1/health

      - name: Test admin-service
        run: |
          curl -v http://localhost/admin/api/v1/health

      - name: Test user-service
        run: |
          curl -v http://localhost/user/api/v1/health

      # - name: Check Kubeconfig
      #   run: |
      #     kubectl config current-context
      #     kubectl cluster-info

      # - name: Check Pods status
      #   run: kubectl get pods -A

      # - name: Test Services
      #   run: |
      #     kubectl get svc

    env:
      # FastAPI Ports
      EXTERNAL_FASTAPI_PORT: ${{ vars.EXTERNAL_FASTAPI_PORT }}
      INTERNAL_FASTAPI_PORT: ${{ vars.INTERNAL_FASTAPI_PORT }}

      # Base URLs
      AUTH_BASE_URL: ${{ vars.AUTH_BASE_URL }}
      PRODUCT_BASE_URL: ${{ vars.PRODUCT_BASE_URL }}
      ORDER_BASE_URL: ${{ vars.ORDER_BASE_URL }}

      # DB Stack
      AUTH_DB_STACK: ${{ vars.AUTH_DB_STACK }}
      PRODUCT_DB_STACK: ${{ vars.PRODUCT_DB_STACK }}
      ORDER_DB_STACK: ${{ vars.ORDER_DB_STACK }}

      # MongoDB
      MONGO_HOST: ${{ vars.MONGO_HOST }}
      MONGO_PORT: ${{ vars.MONGO_PORT }}
      MONGO_INITDB_ROOT_USERNAME: ${{ vars.MONGO_INITDB_ROOT_USERNAME }}
      MONGO_INITDB_ROOT_PASSWORD: ${{ vars.MONGO_INITDB_ROOT_PASSWORD }}
      MONGO_INITDB_DATABASE: ${{ vars.MONGO_INITDB_DATABASE }}

      # PostgreSQL
      POSTGRES_HOST: ${{ vars.POSTGRES_HOST }}
      POSTGRES_PORT: ${{ vars.POSTGRES_PORT }}
      POSTGRES_USER: ${{ vars.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ vars.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ vars.POSTGRES_DB }}

      # PGAdmin
      PGADMIN_DEFAULT_EMAIL: ${{ vars.PGADMIN_DEFAULT_EMAIL }}
      PGADMIN_DEFAULT_PASSWORD: ${{ vars.PGADMIN_DEFAULT_PASSWORD }}

      # JWT
      JWT_SECRET: ${{ vars.JWT_SECRET }}
      JWT_ALGORITHM: ${{ vars.JWT_ALGORITHM }}
      JWT_EXPIRATION_MINUTES: ${{ vars.JWT_EXPIRATION_MINUTES }}
      JWT_REFRESH_EXPIRATION_MINUTES: ${{ vars.JWT_REFRESH_EXPIRATION_MINUTES }}
